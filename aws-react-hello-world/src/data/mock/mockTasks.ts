import { Task } from '../../models';

export const mockTasks: Task[] = [
  // AWS Starter project tasks
  {
    id: 'task-1',
    projectId: 'project-1',
    title: 'Update API documentation',
    description: 'Add examples and update endpoint descriptions',
    status: 'TODO',
    priority: 'HIGH',
    dueDate: '2025-03-20T23:59:59Z',
    category: 'Documentation',
    completed: false,
    assigneeId: 'user-2',
    reporterId: 'user-1',
    createdAt: '2025-03-10T09:30:00Z',
    updatedAt: '2025-03-10T09:30:00Z'
  },
  {
    id: 'task-2',
    projectId: 'project-1',
    title: 'Implement JWT authentication',
    description: 'Implement JWT (JSON Web Token) authentication to secure API endpoints. This should include:\n- User login endpoint that returns a JWT\n- JWT validation middleware\n- Role-based access control for protected endpoints\n- Token refresh mechanism\n- Secure storage of tokens on the client side',
    status: 'IN_PROGRESS',
    priority: 'HIGH',
    dueDate: '2025-03-25T23:59:59Z',
    category: 'Backend',
    completed: false,
    assigneeId: 'user-1',
    reporterId: 'user-1',
    createdAt: '2025-03-11T11:45:00Z',
    updatedAt: '2025-03-15T10:30:00Z'
  },
  {
    id: 'task-3',
    projectId: 'project-1',
    title: 'Update dependencies',
    description: 'Update npm packages to latest versions',
    status: 'TODO',
    priority: 'MEDIUM',
    dueDate: '2025-03-22T23:59:59Z',
    category: 'Maintenance',
    completed: false,
    assigneeId: 'user-3',
    reporterId: 'user-1',
    createdAt: '2025-03-12T14:20:00Z',
    updatedAt: '2025-03-12T14:20:00Z'
  },
  {
    id: 'task-4',
    projectId: 'project-1',
    title: 'Fix CORS configuration',
    description: 'Update CORS configuration to allow requests from the frontend domain',
    status: 'IN_PROGRESS',
    priority: 'HIGH',
    dueDate: '2025-03-18T23:59:59Z',
    category: 'Backend',
    completed: false,
    assigneeId: 'user-2',
    reporterId: 'user-3',
    createdAt: '2025-03-13T09:15:00Z',
    updatedAt: '2025-03-16T11:30:00Z'
  },
  {
    id: 'task-5',
    projectId: 'project-1',
    title: 'Implement error handling',
    description: 'Add global error handling and consistent error responses',
    status: 'REVIEW',
    priority: 'MEDIUM',
    dueDate: '2025-03-23T23:59:59Z',
    category: 'Backend',
    completed: false,
    assigneeId: 'user-3',
    reporterId: 'user-1',
    createdAt: '2025-03-14T13:45:00Z',
    updatedAt: '2025-03-17T10:20:00Z'
  },
  {
    id: 'task-6',
    projectId: 'project-1',
    title: 'Create deployment script',
    description: 'Write a script to automate the deployment process',
    status: 'DONE',
    priority: 'HIGH',
    dueDate: '2025-03-15T23:59:59Z',
    category: 'DevOps',
    completed: true,
    assigneeId: 'user-1',
    reporterId: 'user-1',
    createdAt: '2025-03-08T10:30:00Z',
    updatedAt: '2025-03-15T09:45:00Z'
  },
  
  // Task Manager project tasks
  {
    id: 'task-7',
    projectId: 'project-2',
    title: 'Design task board UI',
    description: 'Create mockups for the task board interface',
    status: 'DONE',
    priority: 'HIGH',
    dueDate: '2025-03-10T23:59:59Z',
    category: 'Design',
    completed: true,
    assigneeId: 'user-5',
    reporterId: 'user-1',
    createdAt: '2025-03-01T11:30:00Z',
    updatedAt: '2025-03-10T14:15:00Z'
  },
  {
    id: 'task-8',
    projectId: 'project-2',
    title: 'Implement drag and drop',
    description: 'Add drag and drop functionality to the task board',
    status: 'IN_PROGRESS',
    priority: 'MEDIUM',
    dueDate: '2025-03-20T23:59:59Z',
    category: 'Frontend',
    completed: false,
    assigneeId: 'user-3',
    reporterId: 'user-1',
    createdAt: '2025-03-11T09:45:00Z',
    updatedAt: '2025-03-15T13:20:00Z'
  },
  
  // API Development project tasks
  {
    id: 'task-9',
    projectId: 'project-4',
    title: 'Define API endpoints',
    description: 'Document all required API endpoints with request/response formats',
    status: 'DONE',
    priority: 'HIGH',
    dueDate: '2025-03-05T23:59:59Z',
    category: 'Planning',
    completed: true,
    assigneeId: 'user-3',
    reporterId: 'user-3',
    createdAt: '2025-02-26T10:15:00Z',
    updatedAt: '2025-03-05T11:30:00Z'
  },
  {
    id: 'task-10',
    projectId: 'project-4',
    title: 'Implement user authentication',
    description: 'Create endpoints for user registration, login, and password reset',
    status: 'IN_PROGRESS',
    priority: 'HIGH',
    dueDate: '2025-03-18T23:59:59Z',
    category: 'Backend',
    completed: false,
    assigneeId: 'user-2',
    reporterId: 'user-3',
    createdAt: '2025-03-06T09:30:00Z',
    updatedAt: '2025-03-14T14:45:00Z'
  },
  {
    id: 'task-11',
    projectId: 'project-4',
    title: 'Write API tests',
    description: 'Create comprehensive test suite for all API endpoints',
    status: 'TODO',
    priority: 'MEDIUM',
    dueDate: '2025-03-25T23:59:59Z',
    category: 'Testing',
    completed: false,
    assigneeId: 'user-1',
    reporterId: 'user-3',
    createdAt: '2025-03-10T13:45:00Z',
    updatedAt: '2025-03-10T13:45:00Z'
  }
];
